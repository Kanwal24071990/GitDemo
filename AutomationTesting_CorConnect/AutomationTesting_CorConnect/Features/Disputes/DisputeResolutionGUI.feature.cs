// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AutomationTesting_CorConnect.Features.Disputes
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DisputeResolutionGUI")]
    public partial class DisputeResolutionGUIFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "DisputeResolutionGUI.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/Disputes", "DisputeResolutionGUI", "A short summary of the feature", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate Navigation to Invoice Options for Disputed Inv")]
        [NUnit.Framework.CategoryAttribute("CON-25856")]
        [NUnit.Framework.CategoryAttribute("InvoiceOptions")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        [NUnit.Framework.CategoryAttribute("18.0")]
        [NUnit.Framework.CategoryAttribute("UAT")]
        [NUnit.Framework.TestCaseAttribute("Admin", null)]
        [NUnit.Framework.TestCaseAttribute("Fleet", null)]
        [NUnit.Framework.TestCaseAttribute("Dealer", null)]
        public void ValidateNavigationToInvoiceOptionsForDisputedInv(string user, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CON-25856",
                    "InvoiceOptions",
                    "Smoke",
                    "18.0",
                    "UAT"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("User", user);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Navigation to Invoice Options for Disputed Inv", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 8
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 9
 testRunner.Given(string.Format("User \"{0}\" is on \"Disputes\" page", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 10
 testRunner.When("User clicks on \"Disputed Invoice\" hyperlink from search grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.Then("User should land on Invoice Options window \"Dispute Resolution\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate Navigation to Invoice Options for Dispute Resolved Inv")]
        [NUnit.Framework.CategoryAttribute("CON-25856")]
        [NUnit.Framework.CategoryAttribute("InvoiceOptions")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        [NUnit.Framework.CategoryAttribute("18.0")]
        [NUnit.Framework.CategoryAttribute("UAT")]
        [NUnit.Framework.TestCaseAttribute("Admin", null)]
        [NUnit.Framework.TestCaseAttribute("Fleet", null)]
        public void ValidateNavigationToInvoiceOptionsForDisputeResolvedInv(string user, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CON-25856",
                    "InvoiceOptions",
                    "Smoke",
                    "18.0",
                    "UAT"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("User", user);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Navigation to Invoice Options for Dispute Resolved Inv", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 22
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 23
 testRunner.Given(string.Format("User \"{0}\" is on \"Disputes\" page", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 24
 testRunner.When("User clicks on \"Dispute Resolved Inv\" hyperlink from search grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 25
 testRunner.Then("User should land on Invoice Options window \"Dispute Info\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate Dlr Usr Navigation to Invoice Options for Dispute Resolved Inv")]
        [NUnit.Framework.CategoryAttribute("CON-25856")]
        [NUnit.Framework.CategoryAttribute("InvoiceOptions")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        [NUnit.Framework.CategoryAttribute("18.0")]
        [NUnit.Framework.CategoryAttribute("UAT")]
        public void ValidateDlrUsrNavigationToInvoiceOptionsForDisputeResolvedInv()
        {
            string[] tagsOfScenario = new string[] {
                    "CON-25856",
                    "InvoiceOptions",
                    "Smoke",
                    "18.0",
                    "UAT"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Dlr Usr Navigation to Invoice Options for Dispute Resolved Inv", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 35
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 36
 testRunner.Given("User \"Dealer\" is on \"Disputes\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 37
 testRunner.When("User clicks on \"Dispute Resolved Inv\" hyperlink from search grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 38
 testRunner.Then("User should land on Invoice Options window \"Dispute Resolution\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate Create Dispute GUI")]
        [NUnit.Framework.CategoryAttribute("CON-25979")]
        [NUnit.Framework.CategoryAttribute("DisputeGUI")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        [NUnit.Framework.CategoryAttribute("18.0")]
        [NUnit.Framework.CategoryAttribute("UAT")]
        [NUnit.Framework.TestCaseAttribute("Admin", null)]
        [NUnit.Framework.TestCaseAttribute("Fleet", null)]
        public void ValidateCreateDisputeGUI(string user, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CON-25979",
                    "DisputeGUI",
                    "Smoke",
                    "18.0",
                    "UAT"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("User", user);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Create Dispute GUI", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 43
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 44
 testRunner.Given(string.Format("User \"{0}\" is on \"Fleet Invoices\" page", user), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 45
 testRunner.When("User goes to Invoice Options window for \"Dispute Creation\" on \"Fleet Invoices\" pa" +
                        "ge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 46
 testRunner.Then("Valid Fields should be displayed for \"Current Invoice\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate Update Dispute GUI")]
        [NUnit.Framework.CategoryAttribute("CON-25979")]
        [NUnit.Framework.CategoryAttribute("DisputeGUI")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        [NUnit.Framework.CategoryAttribute("18.0")]
        [NUnit.Framework.CategoryAttribute("UAT")]
        [NUnit.Framework.TestCaseAttribute("Admin", "Disputes", null)]
        [NUnit.Framework.TestCaseAttribute("Admin", "Fleet Invoices", null)]
        [NUnit.Framework.TestCaseAttribute("Fleet", "Disputes", null)]
        [NUnit.Framework.TestCaseAttribute("Fleet", "Fleet Invoices", null)]
        public void ValidateUpdateDisputeGUI(string user, string pageName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CON-25979",
                    "DisputeGUI",
                    "Smoke",
                    "18.0",
                    "UAT"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("User", user);
            argumentsOfScenario.Add("PageName", pageName);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Update Dispute GUI", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 57
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 58
 testRunner.Given(string.Format("User \"{0}\" is on \"{1}\" page", user, pageName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 59
 testRunner.When(string.Format("User goes to Invoice Options window for \"Dispute Updation\" on \"{0}\" page", pageName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 60
 testRunner.Then("Valid Fields should be displayed for \"Disputed Invoice\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate Dispute Resolution GUI")]
        [NUnit.Framework.CategoryAttribute("CON-25979")]
        [NUnit.Framework.CategoryAttribute("DisputeGUI")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        [NUnit.Framework.CategoryAttribute("18.0")]
        [NUnit.Framework.CategoryAttribute("UAT")]
        [NUnit.Framework.TestCaseAttribute("Admin", "Disputes", null)]
        [NUnit.Framework.TestCaseAttribute("Admin", "Fleet Invoices", null)]
        [NUnit.Framework.TestCaseAttribute("Fleet", "Disputes", null)]
        [NUnit.Framework.TestCaseAttribute("Fleet", "Fleet Invoices", null)]
        [NUnit.Framework.TestCaseAttribute("Dealer", "Disputes", null)]
        public void ValidateDisputeResolutionGUI(string user, string pageName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CON-25979",
                    "DisputeGUI",
                    "Smoke",
                    "18.0",
                    "UAT"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("User", user);
            argumentsOfScenario.Add("PageName", pageName);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Dispute Resolution GUI", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 72
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 73
 testRunner.Given(string.Format("User \"{0}\" is on \"{1}\" page", user, pageName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 74
 testRunner.When(string.Format("User goes to Invoice Options window for \"Resolving Dispute\" on \"{0}\" page", pageName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 75
 testRunner.Then("Valid Fields should be displayed for \"Dispute Resolution\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate Re-Dispute GUI")]
        [NUnit.Framework.CategoryAttribute("CON-25979")]
        [NUnit.Framework.CategoryAttribute("DisputeGUI")]
        [NUnit.Framework.CategoryAttribute("Smoke")]
        [NUnit.Framework.CategoryAttribute("18.0")]
        [NUnit.Framework.CategoryAttribute("UAT")]
        [NUnit.Framework.TestCaseAttribute("Admin", "Disputes", null)]
        [NUnit.Framework.TestCaseAttribute("Admin", "Fleet Invoices", null)]
        [NUnit.Framework.TestCaseAttribute("Fleet", "Disputes", null)]
        [NUnit.Framework.TestCaseAttribute("Fleet", "Fleet Invoices", null)]
        public void ValidateRe_DisputeGUI(string user, string pageName, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CON-25979",
                    "DisputeGUI",
                    "Smoke",
                    "18.0",
                    "UAT"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("User", user);
            argumentsOfScenario.Add("PageName", pageName);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate Re-Dispute GUI", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 90
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 91
 testRunner.Given(string.Format("User \"{0}\" is on \"{1}\" page", user, pageName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 92
 testRunner.When(string.Format("User goes to Invoice Options window for \"ReDispute\" on \"{0}\" page", pageName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 93
 testRunner.Then("Valid Fields should be displayed for \"ReDispute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
